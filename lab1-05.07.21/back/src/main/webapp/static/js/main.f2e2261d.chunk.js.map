{"version":3,"sources":["api/EntityCRUD.ts","components/ManagementConsole.tsx","index.tsx"],"names":["EntitiesURLs","toJson","res","text","EntityCRUD","entity","fetch","method","then","ManagementConsole","PERSON","data","console","info","style","minHeight","Sider","defaultSelectedKeys","mode","Item","icon","UserOutlined","DingdingOutlined","className","Content","Footer","textAlign","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2GAEKA,E,mFAFCC,EAAS,SAAAC,GAAG,OAAIA,EAAIC,S,SAErBH,K,6DAAAA,E,8DAAAA,M,KAKL,IAAMI,EAEM,SAAIC,GACR,OAAOC,MAAMD,EAAQ,CAAEE,OAAQ,QAAQC,KAAKP,I,QC0BrCQ,EA7BqB,WAIhC,OAFAL,EAAkBJ,EAAaU,QAAQF,MAAK,SAAAG,GAAI,OAAIC,QAAQC,KAAKF,MAE1D,eAAC,IAAD,CAAQG,MAAO,CAAEC,UAAW,SAA5B,UACH,cAAC,IAAOC,MAAR,UACI,eAAC,IAAD,CAAMC,oBAAqB,CAAC,KAAMC,KAAK,SAAvC,UACI,cAAC,IAAKC,KAAN,CAAWC,KAAM,cAACC,EAAA,EAAD,IAAjB,qBAGA,cAAC,IAAKF,KAAN,CAAWC,KAAM,cAACE,EAAA,EAAD,IAAjB,0BAKR,eAAC,IAAD,CAAQC,UAAU,cAAlB,UACI,cAAC,IAAOC,QAAR,UACI,qBAAKD,UAAU,yBAAyBT,MAAO,CAAEC,UAAW,SAGhE,cAAC,IAAOU,OAAR,CAAeX,MAAO,CAAEY,UAAW,UAAnC,SACI,mBAAGC,KAAM,kCAAT,0CCvBhBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.f2e2261d.chunk.js","sourcesContent":["const toJson = res => res.text()\n\nenum EntitiesURLs {\n    PERSON = `http://localhost:8080/back-1.0-ULTIMATE/api/persons`,\n    DRAGON = `http://localhost:8080/back-1.0-ULTIMATE/api/dragons`\n}\n\nconst EntityCRUD = {\n\n    getAll: <T>(entity: EntitiesURLs): Promise<T> => {\n        return fetch(entity, { method: 'GET'}).then(toJson)\n    },\n\n    getById: <T>(entity: EntitiesURLs, id: number): Promise<T> => {\n        return fetch(`${entity}${id}`, { method: 'GET' }).then(toJson)\n    },\n\n    updateById: <T>(entity: EntitiesURLs, id: number, modifiedData: object): Promise<T> => {\n        return fetch(`${entity}${id}`, {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(modifiedData)\n        }).then(toJson)\n    },\n\n    add: <T>(entity: EntitiesURLs, newbie: object): Promise<T> => {\n        return fetch(entity, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newbie)\n        }).then(toJson)\n    },\n\n    delete: <T>(entity: EntitiesURLs, id: number): Promise<T> => {\n        return fetch(`${entity}${id}`, { method: 'DELETE' }).then(toJson)\n    },\n}\n\nexport { EntitiesURLs, EntityCRUD, toJson }","import '../resources/App.css'\nimport { Layout, Menu } from \"antd\"\nimport { UserOutlined, DingdingOutlined } from '@ant-design/icons'\nimport React from \"react\"\nimport { EntityCRUD, EntitiesURLs } from \"../api/EntityCRUD\"\n\n\nconst ManagementConsole: React.FC = () => {\n\n    EntityCRUD.getAll(EntitiesURLs.PERSON).then(data => console.info(data))\n\n    return <Layout style={{ minHeight: '100vh' }}>\n        <Layout.Sider>\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\n                <Menu.Item icon={<UserOutlined/>}>\n                    Persons\n                </Menu.Item>\n                <Menu.Item icon={<DingdingOutlined/>}>\n                    Dragons\n                </Menu.Item>\n            </Menu>\n        </Layout.Sider>\n        <Layout className=\"site-layout\">\n            <Layout.Content>\n                <div className=\"site-layout-background\" style={{ minHeight: 360 }}>\n                </div>\n            </Layout.Content>\n            <Layout.Footer style={{ textAlign: \"center\"}}>\n                <a href={\"https://se.ifmo.ru/~s265570/cv/\"}>\n                    Kulbako Artemy 2021\n                </a>\n            </Layout.Footer>\n        </Layout>\n    </Layout>\n}\n\nexport default ManagementConsole","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './resources/index.css'\nimport ManagementConsole from './components/ManagementConsole'\n\nReactDOM.render(\n    <React.StrictMode>\n        <ManagementConsole />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}